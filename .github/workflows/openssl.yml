name: Build OpenSSL

on:
  workflow_dispatch:
  workflow_call:
  schedule:
    - cron: "00 01 * * *"
    
jobs:
  get-versions:
    uses: ./.github/workflows/manifest.yml
    with:
      config-path: manifest.json

  build-openssl:
    needs: get-versions
    runs-on: windows-latest
    env:
      OPENSSL_VERSION:  ${{needs.get-versions.outputs.OPENSSL_VERSION}}
    steps:
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Download
        run: |
          curl -L https://www.openssl.org/source/openssl-${{ env.OPENSSL_VERSION }}.tar.gz -o ./openssl-${{ env.OPENSSL_VERSION }}.tar.gz
          tar zxvf openssl-${{ env.OPENSSL_VERSION }}.tar.gz

      - name: Configure
        run: |
          cd openssl-${{ env.OPENSSL_VERSION }}
          perl Configure VC-WIN64A no-asm --prefix=\openssl no-ssl3 no-comp

      - name: Build
        run: |
          cd openssl-${{ env.OPENSSL_VERSION }}
          nmake

      - name: Test
        run: |
          cd openssl-${{ env.OPENSSL_VERSION }}
          nmake test

      - name: Install
        run: |
          mkdir \openssl
          cd openssl-${{ env.OPENSSL_VERSION }}
          nmake install

      - name: Create pkgconfig File
        run: |
          mkdir \openssl\lib\pkgconfig

          >> \openssl\lib\pkgconfig\openssl.pc echo prefix=${pcfiledir}/../..
          >> \openssl\lib\pkgconfig\openssl.pc echo exec_prefix=${prefix}
          >> \openssl\lib\pkgconfig\openssl.pc echo libdir=${prefix}/lib
          >> \openssl\lib\pkgconfig\openssl.pc echo includedir=${prefix}/include
          >> \openssl\lib\pkgconfig\openssl.pc echo.
          >> \openssl\lib\pkgconfig\openssl.pc echo Name: openssl
          >> \openssl\lib\pkgconfig\openssl.pc echo Description: openssl encryption library
          >> \openssl\lib\pkgconfig\openssl.pc echo Version: ${{ env.OPENSSL_VERSION }}
          >> \openssl\lib\pkgconfig\openssl.pc echo Libs: -L${libdir} -lcrypto -lssl
          >> \openssl\lib\pkgconfig\openssl.pc echo Cflags: -I${includedir}
        shell: cmd

      - name: Upload Source
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: openssl-${{ env.OPENSSL_VERSION }}-src
          path: openssl-${{ env.OPENSSL_VERSION }}.tar.gz

      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: openssl-${{ env.OPENSSL_VERSION }}-win64
          path: /openssl

      - name: Package Release Assets
        shell: pwsh
        run: |
          Compress-Archive /openssl /openssl-latest.zip
          
      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "openssl-latest"
          title: "OpenSSL"
          files: |
            /openssl-latest.zip