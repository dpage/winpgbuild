name: Build lz4

on:
  workflow_dispatch:
  workflow_call:
  schedule:
    - cron: "00 01 * * *"
    
jobs:
  get-versions:
    uses: ./.github/workflows/manifest.yml
    with:
      config-path: manifest.json

  build-lz4:
    runs-on: windows-latest
    needs: get-versions
    env:
      LZ4_VERSION: ${{needs.get-versions.outputs.LZ4_VERSION}}
    steps:
      - uses: microsoft/setup-msbuild@v2

      - name: Download
        run: |
          curl -L https://github.com/lz4/lz4/releases/download/v${{ env.LZ4_VERSION }}/lz4-${{ env.LZ4_VERSION }}.tar.gz -o ./lz4-${{ env.LZ4_VERSION }}.tar.gz
          tar zxvf lz4-${{ env.LZ4_VERSION }}.tar.gz

      - name: Build
        run: |
          cd lz4-${{ env.LZ4_VERSION }}
          msbuild build\VS2022\lz4.sln -target:liblz4-dll /property:Configuration=Release /property:Platform=x64

      - name: Install
        run: |
          cd lz4-${{ env.LZ4_VERSION }}

          mkdir \lz4

          mkdir \lz4\bin
          copy build\VS2022\bin\x64_Release\liblz4.dll /lz4/bin/
          copy build\VS2022\bin\x64_Release\liblz4.pdb /lz4/bin/

          mkdir \lz4\include
          copy lib\*.h \lz4\include\

          mkdir \lz4\lib
          copy build\VS2022\bin\x64_Release\liblz4.lib \lz4\lib\

      - name: Create pkgconfig File
        run: |
          mkdir \lz4\lib\pkgconfig

          >> \lz4\lib\pkgconfig\liblz4.pc echo prefix=${pcfiledir}/../..
          >> \lz4\lib\pkgconfig\liblz4.pc echo exec_prefix=${prefix}
          >> \lz4\lib\pkgconfig\liblz4.pc echo libdir=${prefix}/lib
          >> \lz4\lib\pkgconfig\liblz4.pc echo includedir=${prefix}/include
          >> \lz4\lib\pkgconfig\liblz4.pc echo.
          >> \lz4\lib\pkgconfig\liblz4.pc echo Name: liblz4
          >> \lz4\lib\pkgconfig\liblz4.pc echo Version: ${{ env.LZ4_VERSION }}
          >> \lz4\lib\pkgconfig\liblz4.pc echo Description: lz4 compression library
          >> \lz4\lib\pkgconfig\liblz4.pc echo Libs: -L${libdir} -llz4
          >> \lz4\lib\pkgconfig\liblz4.pc echo Cflags: -I${includedir}
        shell: cmd

      - name: Upload Source
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: lz4-${{ env.LZ4_VERSION }}-src
          path: lz4-${{ env.LZ4_VERSION }}.tar.gz

      - name: Upload Binaries
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: lz4-${{ env.LZ4_VERSION }}-win64
          path: /lz4

      - name: Package Release Assets
        shell: pwsh
        run: |
          Compress-Archive /lz4 /lz4-latest.zip
          
      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "lz4-latest"
          title: "lz4"
          files: |
            /lz4-latest.zip